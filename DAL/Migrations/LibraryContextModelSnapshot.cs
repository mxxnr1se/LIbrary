// <auto-generated />
using System;
using DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:Collation", "Cyrillic_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("DAL.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "William",
                            LastName = "Shakespeare"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Agatha",
                            LastName = "Christie"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Barbara",
                            LastName = "Cartland"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Kyotaro",
                            LastName = "Nishimura"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Danielle",
                            LastName = "Steel"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Georges",
                            LastName = "Simenon"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Corín",
                            LastName = "Tellado"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Alexander",
                            LastName = "Pushkin"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Gilbert",
                            LastName = "Patten"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Gilbert",
                            LastName = "Patten"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            GenreId = 1,
                            Quantity = 5,
                            Title = "Shakespeare's Sonnets"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            GenreId = 1,
                            Quantity = 2,
                            Title = "Shall I compare thee to a summer's day?"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            GenreId = 4,
                            Quantity = 1,
                            Title = "Hercule Poirot"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            GenreId = 4,
                            Quantity = 6,
                            Title = "Jane Marple"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 3,
                            GenreId = 5,
                            Quantity = 0,
                            Title = "Duel of Hearts"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            GenreId = 5,
                            Quantity = 3,
                            Title = "Romantic Royal Marriages"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 3,
                            GenreId = 5,
                            Quantity = 4,
                            Title = "A Ghost in Monte Carlo"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 5,
                            GenreId = 5,
                            Quantity = 3,
                            Title = "Zoya"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 5,
                            GenreId = 5,
                            Quantity = 1,
                            Title = "Sisters"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 4,
                            GenreId = 3,
                            Quantity = 3,
                            Title = "The Mystery Train Disappears"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 4,
                            GenreId = 3,
                            Quantity = 8,
                            Title = "Kisei Honsen Satsujin Jiken"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 6,
                            GenreId = 4,
                            Quantity = 3,
                            Title = "Maigret"
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 6,
                            GenreId = 4,
                            Quantity = 5,
                            Title = "The Strange Case of Peter the Lett"
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 7,
                            GenreId = 5,
                            Quantity = 0,
                            Title = "Tu pasado me condena"
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 8,
                            GenreId = 1,
                            Quantity = 2,
                            Title = "Poltava"
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 8,
                            GenreId = 1,
                            Quantity = 4,
                            Title = "The Gypsies"
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 9,
                            GenreId = 2,
                            Quantity = 6,
                            Title = "Frank Merriwell"
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 9,
                            GenreId = 2,
                            Quantity = 1,
                            Title = "Boltwood of Yale"
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 10,
                            GenreId = 2,
                            Quantity = 5,
                            Title = "Winnetou"
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 10,
                            GenreId = 2,
                            Quantity = 3,
                            Title = "The Oil Prince"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("ReaderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Forms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 2,
                            ReaderId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 3,
                            ReaderId = 1
                        },
                        new
                        {
                            Id = 3,
                            BookId = 6,
                            ReaderId = 1
                        },
                        new
                        {
                            Id = 4,
                            BookId = 1,
                            ReaderId = 1
                        },
                        new
                        {
                            Id = 5,
                            BookId = 3,
                            ReaderId = 1
                        },
                        new
                        {
                            Id = 6,
                            BookId = 4,
                            ReaderId = 1
                        },
                        new
                        {
                            Id = 7,
                            BookId = 20,
                            ReaderId = 2
                        },
                        new
                        {
                            Id = 8,
                            BookId = 11,
                            ReaderId = 2
                        },
                        new
                        {
                            Id = 9,
                            BookId = 5,
                            ReaderId = 3
                        },
                        new
                        {
                            Id = 10,
                            BookId = 5,
                            ReaderId = 3
                        },
                        new
                        {
                            Id = 11,
                            BookId = 2,
                            ReaderId = 3
                        },
                        new
                        {
                            Id = 12,
                            BookId = 7,
                            ReaderId = 3
                        },
                        new
                        {
                            Id = 13,
                            BookId = 9,
                            ReaderId = 3
                        },
                        new
                        {
                            Id = 14,
                            BookId = 10,
                            ReaderId = 3
                        },
                        new
                        {
                            Id = 15,
                            BookId = 11,
                            ReaderId = 3
                        },
                        new
                        {
                            Id = 16,
                            BookId = 12,
                            ReaderId = 3
                        },
                        new
                        {
                            Id = 17,
                            BookId = 13,
                            ReaderId = 3
                        },
                        new
                        {
                            Id = 18,
                            BookId = 14,
                            ReaderId = 3
                        },
                        new
                        {
                            Id = 19,
                            BookId = 4,
                            ReaderId = 4
                        },
                        new
                        {
                            Id = 20,
                            BookId = 8,
                            ReaderId = 4
                        },
                        new
                        {
                            Id = 21,
                            BookId = 15,
                            ReaderId = 4
                        },
                        new
                        {
                            Id = 22,
                            BookId = 17,
                            ReaderId = 4
                        },
                        new
                        {
                            Id = 23,
                            BookId = 16,
                            ReaderId = 5
                        },
                        new
                        {
                            Id = 24,
                            BookId = 17,
                            ReaderId = 5
                        },
                        new
                        {
                            Id = 25,
                            BookId = 18,
                            ReaderId = 5
                        },
                        new
                        {
                            Id = 26,
                            BookId = 19,
                            ReaderId = 5
                        },
                        new
                        {
                            Id = 27,
                            BookId = 20,
                            ReaderId = 5
                        },
                        new
                        {
                            Id = 28,
                            BookId = 17,
                            ReaderId = 5
                        },
                        new
                        {
                            Id = 29,
                            BookId = 1,
                            ReaderId = 6
                        },
                        new
                        {
                            Id = 30,
                            BookId = 4,
                            ReaderId = 6
                        },
                        new
                        {
                            Id = 31,
                            BookId = 9,
                            ReaderId = 6
                        },
                        new
                        {
                            Id = 32,
                            BookId = 7,
                            ReaderId = 6
                        },
                        new
                        {
                            Id = 33,
                            BookId = 2,
                            ReaderId = 6
                        },
                        new
                        {
                            Id = 34,
                            BookId = 6,
                            ReaderId = 6
                        });
                });

            modelBuilder.Entity("DAL.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Poetry"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fiction"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Detective"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Romance"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Reader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Readers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DoB = new DateTime(1965, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Catherine ",
                            LastName = "McGinley",
                            Phone = "719-557-7626"
                        },
                        new
                        {
                            Id = 2,
                            DoB = new DateTime(1984, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jim",
                            LastName = "Hyde",
                            Phone = "517-663-4353"
                        },
                        new
                        {
                            Id = 3,
                            DoB = new DateTime(1976, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Merri",
                            LastName = "Rosborough",
                            Phone = "423-473-0603"
                        },
                        new
                        {
                            Id = 4,
                            DoB = new DateTime(1969, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dale",
                            LastName = "Pereira",
                            Phone = "248-744-7065"
                        },
                        new
                        {
                            Id = 5,
                            DoB = new DateTime(1971, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Larry",
                            Phone = "208-530-9934"
                        },
                        new
                        {
                            Id = 6,
                            DoB = new DateTime(1988, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Richard",
                            LastName = "Taylor",
                            Phone = "913-403-7491"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Book", b =>
                {
                    b.HasOne("DAL.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DAL.Entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Author");

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
